{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lior9\\\\Desktop\\\\sprint4\\\\Hike_N_Guide\\\\frontend\\\\src\\\\cmps\\\\MapContainer.jsx\";\nimport React, { Component } from 'react';\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\nimport history from '../history';\nexport class MapContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      showingInfoWindow: false,\n      activeMarker: {},\n      selectedPlace: {},\n      lat: 0,\n      lng: 0,\n      fromAdd: false\n    };\n\n    this.onMarkerClick = (props, marker, e) => this.setState({\n      selectedPlace: props,\n      activeMarker: marker,\n      showingInfoWindow: true\n    });\n\n    this.updateLatLng = (lat, lng) => {\n      // this.setState({lat,lng})\n      this.props.updateLatLng(lat, lng);\n    };\n\n    this.onMapClicked = (props, map, clickEvent) => {\n      if (!this.state.fromAdd) return;\n      const lat = clickEvent.latLng.lat();\n      const lng = clickEvent.latLng.lng();\n      console.log(lat);\n      console.log(lng);\n      this.updateLatLng(lat, lng);\n      console.log(this.state);\n\n      if (this.state.showingInfoWindow) {\n        this.setState({\n          showingInfoWindow: false,\n          activeMarker: null\n        });\n      }\n    };\n\n    this.onClick = (t, map, coord) => {\n      console.log(t, map, coord);\n    };\n  }\n\n  componentDidMount() {\n    if (history.location.pathname === '/trail/add') {\n      this.setState({\n        fromAdd: true\n      });\n    }\n  }\n\n  render() {\n    const containerStyle = {\n      position: 'static',\n      width: '100%',\n      height: '40%'\n    };\n    return /*#__PURE__*/React.createElement(Map, {\n      style: containerStyle,\n      google: this.props.google,\n      initialCenter: this.props.location ? {\n        lat: this.props.location.lat,\n        lng: this.props.location.lng\n      } : {\n        lat: 41,\n        lng: 24\n      },\n      onClick: this.onMapClicked,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Marker, {\n      onClick: this.onMarkerClick,\n      name: 'Current location',\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(InfoWindow, {\n      marker: this.state.activeMarker,\n      visible: this.state.showingInfoWindow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"h1\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 25\n      }\n    }, this.state.selectedPlace.name))));\n  }\n\n}\nexport default GoogleApiWrapper({\n  apiKey: 'AIzaSyDw7z6CMCiRYFpFmT4LIk7JWqyqvSWm1R8'\n})(MapContainer);","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/frontend/src/cmps/MapContainer.jsx"],"names":["React","Component","Map","InfoWindow","Marker","GoogleApiWrapper","history","MapContainer","state","showingInfoWindow","activeMarker","selectedPlace","lat","lng","fromAdd","onMarkerClick","props","marker","e","setState","updateLatLng","onMapClicked","map","clickEvent","latLng","console","log","onClick","t","coord","componentDidMount","location","pathname","render","containerStyle","position","width","height","google","name","apiKey"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Map, InfoWindow, Marker, GoogleApiWrapper } from 'google-maps-react';\r\nimport history from '../history';\r\n\r\nexport class MapContainer extends Component {\r\n    state = {\r\n        showingInfoWindow: false,\r\n        activeMarker: {},\r\n        selectedPlace: {},\r\n        lat: 0,\r\n        lng: 0,\r\n        fromAdd: false\r\n    };\r\n    componentDidMount() {\r\n        if (history.location.pathname==='/trail/add') {\r\n            this.setState({fromAdd:true})\r\n\r\n        }\r\n    }\r\n\r\n\r\n    onMarkerClick = (props, marker, e) =>\r\n        this.setState({\r\n            selectedPlace: props,\r\n            activeMarker: marker,\r\n            showingInfoWindow: true\r\n        });\r\n\r\n    updateLatLng=(lat,lng)=>{\r\n        // this.setState({lat,lng})\r\n        this.props.updateLatLng(lat,lng)\r\n    }\r\n\r\n    \r\n\r\n    onMapClicked = (props, map, clickEvent) => {\r\n        if (!this.state.fromAdd) return\r\n        const lat = clickEvent.latLng.lat()\r\n        const lng = clickEvent.latLng.lng()\r\n        console.log(lat)\r\n        console.log(lng)\r\n        this.updateLatLng(lat,lng)\r\n        console.log(this.state)\r\n        \r\n\r\n        if (this.state.showingInfoWindow) {\r\n            this.setState({\r\n                showingInfoWindow: false,\r\n                activeMarker: null\r\n            })\r\n        }\r\n    };\r\n\r\n\r\n    onClick = (t, map, coord) => {\r\n        console.log(t, map, coord);\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        const containerStyle = {\r\n            position: 'static',\r\n            width: '100%',\r\n            height: '40%',\r\n        }\r\n\r\n\r\n        return (\r\n            <Map\r\n                style={containerStyle}\r\n                google={this.props.google}\r\n                initialCenter={this.props.location ? {\r\n                    lat: this.props.location.lat,\r\n                    lng: this.props.location.lng\r\n                } : {\r\n                        lat: 41,\r\n                        lng: 24\r\n                    }}\r\n                onClick={this.onMapClicked}\r\n                >\r\n                <Marker onClick={this.onMarkerClick}\r\n                    name={'Current location'} />\r\n\r\n\r\n                <InfoWindow\r\n                    marker={this.state.activeMarker}\r\n                    visible={this.state.showingInfoWindow}>\r\n                    <div>\r\n                        <h1>{this.state.selectedPlace.name}</h1>\r\n                    </div>\r\n                </InfoWindow>\r\n            </Map>\r\n        )\r\n\r\n\r\n\r\n    }\r\n}\r\n\r\nexport default GoogleApiWrapper({\r\n    apiKey: ('AIzaSyDw7z6CMCiRYFpFmT4LIk7JWqyqvSWm1R8')\r\n})(MapContainer)\r\n"]},"metadata":{},"sourceType":"module"}