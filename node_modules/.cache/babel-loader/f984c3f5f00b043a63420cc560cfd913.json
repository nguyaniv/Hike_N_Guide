{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lior9\\\\Desktop\\\\sprint4\\\\Hike_N_Guide\\\\frontend\\\\src\\\\pages\\\\GuidesPage.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { List } from '../cmps/List';\nimport { loadUsers } from '../store/actions/userAction';\nimport { loadTrail } from '../store/actions/trailsActions';\nimport { TrailDetails } from '../cmps/TrailDetails';\n\nclass _GuidesPage extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {};\n    this.usersToShow = this.props.users;\n  }\n\n  componentDidMount() {\n    const {\n      id\n    } = this.props.match.params;\n    this.props.loadTrail(id);\n    this.props.loadUsers();\n  } // usersToShow = this.props.trail ?\n  //   this.props.users.filter(user=> user.trails.some(trail => trail._id === this.props.trail._id)) :\n  //   this.props.users;\n\n\n  render() {\n    // const { users } = this.props;\n    const trailId = this.props.match.params.id;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, trailId && /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TrailDetails, {\n      id: trailId,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(List, {\n      items: this.usersToShow,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }\n    }));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  trail: state.trail\n});\n\nconst mapDispatchToProps = {\n  loadUsers,\n  loadTrail\n};\nexport const GuidesPage = connect(mapStateToProps, mapDispatchToProps)(_GuidesPage);","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/frontend/src/pages/GuidesPage.jsx"],"names":["React","connect","List","loadUsers","loadTrail","TrailDetails","_GuidesPage","Component","state","usersToShow","props","users","componentDidMount","id","match","params","render","trailId","mapStateToProps","user","trail","mapDispatchToProps","GuidesPage"],"mappings":";AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,cAArB;AACA,SAASC,SAAT,QAA0B,6BAA1B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,YAAT,QAA6B,sBAA7B;;AAEA,MAAMC,WAAN,SAA0BN,KAAK,CAACO,SAAhC,CAA0C;AAAA;AAAA;AAAA,SACxCC,KADwC,GAChC,EADgC;AAAA,SAcxCC,WAdwC,GAc1B,KAAKC,KAAL,CAAWC,KAde;AAAA;;AAKxCC,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAAEC,MAAAA;AAAF,QAAS,KAAKH,KAAL,CAAWI,KAAX,CAAiBC,MAAhC;AACA,SAAKL,KAAL,CAAWN,SAAX,CAAqBS,EAArB;AACA,SAAKH,KAAL,CAAWP,SAAX;AACD,GATuC,CAWxC;AACA;AACA;;;AAGAa,EAAAA,MAAM,GAAG;AACP;AACA,UAAMC,OAAO,GAAG,KAAKP,KAAL,CAAWI,KAAX,CAAiBC,MAAjB,CAAwBF,EAAxC;AACA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGI,OAAO,iBAEN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,YAAD;AAAc,MAAA,EAAE,EAAGA,OAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAHJ,eAOE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAG,KAAKR,WAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD;;AA9BuC;;AAiC1C,MAAMS,eAAe,GAAGV,KAAK,KAAK;AAChCG,EAAAA,KAAK,EAAEH,KAAK,CAACW,IAAN,CAAWR,KADc;AAEhCS,EAAAA,KAAK,EAAEZ,KAAK,CAACY;AAFmB,CAAL,CAA7B;;AAIA,MAAMC,kBAAkB,GAAG;AACzBlB,EAAAA,SADyB;AAEzBC,EAAAA;AAFyB,CAA3B;AAIA,OAAO,MAAMkB,UAAU,GAAGrB,OAAO,CAACiB,eAAD,EAAkBG,kBAAlB,CAAP,CAA6Cf,WAA7C,CAAnB","sourcesContent":["\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { List } from '../cmps/List';\nimport { loadUsers } from '../store/actions/userAction';\nimport { loadTrail } from '../store/actions/trailsActions';\nimport { TrailDetails } from '../cmps/TrailDetails';\n\nclass _GuidesPage extends React.Component {\n  state = {\n    \n  }\n\n  componentDidMount() {\n    const { id } = this.props.match.params;\n    this.props.loadTrail(id);\n    this.props.loadUsers();\n  }\n\n  // usersToShow = this.props.trail ?\n  //   this.props.users.filter(user=> user.trails.some(trail => trail._id === this.props.trail._id)) :\n  //   this.props.users;\n  usersToShow = this.props.users;\n\n  render() {\n    // const { users } = this.props;\n    const trailId = this.props.match.params.id;\n    return (\n      <main>\n        {trailId &&\n\n          <div>\n            <TrailDetails id={ trailId } />\n          </div>\n        }\n        <List items={ this.usersToShow } />\n      </main>\n    );\n  }\n}\n\nconst mapStateToProps = state => ({\n  users: state.user.users,\n  trail: state.trail,\n});\nconst mapDispatchToProps = {\n  loadUsers,\n  loadTrail,\n};\nexport const GuidesPage = connect(mapStateToProps, mapDispatchToProps)(_GuidesPage);\n"]},"metadata":{},"sourceType":"module"}