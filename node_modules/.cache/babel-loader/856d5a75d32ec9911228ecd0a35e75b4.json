{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lior9\\\\Desktop\\\\sprint4\\\\Hike_N_Guide\\\\src\\\\cmps\\\\TrailAdd.jsx\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { saveTrail, loadTrails } from '../store/actions/trailsActions';\n\nclass TrailAdd extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      name: '',\n      country: '',\n      difficulty: '',\n      distance: '',\n      days: '',\n      location: 'x',\n      imgUrls: [],\n      createdAt: Date.now()\n    };\n\n    this.inputHandler = ({\n      target\n    }) => {\n      const {\n        name\n      } = target;\n      let {\n        value\n      } = target;\n      if (name === 'imgUrls') value = value.split(',');\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.resetForm = () => {\n      this.setState({\n        name: '',\n        country: '',\n        difficulty: '',\n        distance: '',\n        days: '',\n        location: 'x',\n        imgUrls: [],\n        createdAt: Date.now()\n      });\n    };\n\n    this.handleSubmit = ev => {\n      ev.preventDefault();\n      const trail = this.state;\n      this.props.saveTrail(trail).then(() => {\n        this.props.loadTrails();\n      });\n      this.resetForm();\n    };\n  }\n\n  render() {\n    const {\n      name,\n      country,\n      difficulty,\n      days,\n      distance,\n      imgUrls\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.handleSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    }, \"name:\", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      name: \"name\",\n      value: name,\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 30\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }\n    }, \"country: \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"\",\n      type: \"text\",\n      value: country,\n      name: \"country\",\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }\n    }, \"distance: \", /*#__PURE__*/React.createElement(\"input\", {\n      className: \"\",\n      type: \"text\",\n      value: distance,\n      name: \"distance\",\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 35\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 21\n      }\n    }, \"difficulty:\", /*#__PURE__*/React.createElement(\"select\", {\n      name: \"difficulty\",\n      value: difficulty,\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 36\n      }\n    }, /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Beginner\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 29\n      }\n    }, \"Beginner\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Advanced\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 29\n      }\n    }, \"Advanced\"), /*#__PURE__*/React.createElement(\"option\", {\n      value: \"Expect\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 29\n      }\n    }, \"Expect\"))), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, \"days: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"number\",\n      value: days,\n      name: \"days\",\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"label\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }\n    }, \"imgs: \", /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      value: imgUrls,\n      name: \"imgUrls\",\n      onChange: this.inputHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 31\n      }\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }\n    }, \"Add\")));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trails: state.trail.trails\n});\n\nconst mapDispatchToProps = {\n  saveTrail,\n  loadTrails\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(TrailAdd);","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/src/cmps/TrailAdd.jsx"],"names":["React","connect","saveTrail","loadTrails","TrailAdd","Component","state","name","country","difficulty","distance","days","location","imgUrls","createdAt","Date","now","inputHandler","target","value","split","setState","resetForm","handleSubmit","ev","preventDefault","trail","props","then","render","mapStateToProps","trails","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { saveTrail, loadTrails } from '../store/actions/trailsActions';\r\n\r\nclass TrailAdd extends React.Component {\r\n    state = {\r\n      name: '',\r\n      country: '',\r\n      difficulty: '',\r\n      distance: '',\r\n      days: '',\r\n      location: 'x',\r\n      imgUrls: [],\r\n      createdAt: Date.now(),\r\n    }\r\n\r\n    inputHandler = ({ target }) => {\r\n      const { name } = target;\r\n\r\n      let { value } = target;\r\n      if (name === 'imgUrls') value = value.split(',');\r\n      this.setState({ [name]: value });\r\n    }\r\n\r\n    resetForm = () => {\r\n      this.setState({\r\n        name: '',\r\n        country: '',\r\n        difficulty: '',\r\n        distance: '',\r\n        days: '',\r\n        location: 'x',\r\n        imgUrls: [],\r\n        createdAt: Date.now(),\r\n\r\n      });\r\n    }\r\n\r\n    handleSubmit = ev => {\r\n      ev.preventDefault();\r\n      const trail = this.state;\r\n      this.props.saveTrail(trail)\r\n        .then(() => {\r\n          this.props.loadTrails();\r\n        });\r\n      this.resetForm();\r\n    };\r\n\r\n    render() {\r\n      const {\r\n        name, country, difficulty, days, distance, imgUrls,\r\n      } = this.state;\r\n      return (\r\n            <main className=\"\">\r\n                <form onSubmit={ this.handleSubmit }>\r\n                    <label>\r\n                        name:<input type=\"text\" name=\"name\" value={ name } onChange={ this.inputHandler } />\r\n                    </label>\r\n                    <label>\r\n                        country: <input className=\"\" type=\"text\" value={ country } name=\"country\" onChange={ this.inputHandler } />\r\n                    </label>\r\n                    <label>\r\n                        distance: <input className=\"\" type=\"text\" value={ distance } name=\"distance\" onChange={ this.inputHandler } />\r\n                    </label>\r\n                    <label>\r\n                        difficulty:<select name=\"difficulty\" value={ difficulty } onChange={ this.inputHandler }>\r\n                            <option value=\"Beginner\">Beginner</option>\r\n                            <option value=\"Advanced\">Advanced</option>\r\n                            <option value=\"Expect\">Expect</option>\r\n                        </select>\r\n                    </label>\r\n                    <label>\r\n                        days: <input type=\"number\" value={ days } name=\"days\" onChange={ this.inputHandler } />\r\n                    </label>\r\n\r\n                    <label>\r\n                        imgs: <input type=\"text\" value={ imgUrls } name=\"imgUrls\" onChange={ this.inputHandler } />\r\n                    </label>\r\n                    <button className=\"\">Add</button>\r\n                </form>\r\n            </main>\r\n\r\n      );\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  trails: state.trail.trails,\r\n});\r\n\r\nconst mapDispatchToProps = {\r\n  saveTrail,\r\n  loadTrails,\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TrailAdd);\r\n"]},"metadata":{},"sourceType":"module"}