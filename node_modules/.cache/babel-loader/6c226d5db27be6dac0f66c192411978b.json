{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lior9\\\\Desktop\\\\sprint4\\\\Hike_N_Guide\\\\src\\\\cmps\\\\ReviewAdd.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Rating from 'react-rating'; //Images\n\nimport star from \"../img/star.svg\";\nimport star_o from \"../img/\\u200F\\u200Fstar-o.svg\";\n\nclass _ReviewAdd extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      rating: 1,\n      txt: '',\n      by: {}\n    };\n\n    this.handledChange = ev => {\n      const {\n        name,\n        value\n      } = ev.target;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onSend = ev => {\n      ev.preventDefault();\n      const review = this.state;\n    };\n  }\n\n  componentDidMount() {\n    const {\n      user\n    } = this.props;\n\n    if (this.props.guide) {\n      this.setState({\n        by: user,\n        guide: this.props.guide\n      });\n    } else if (this.props.user) {\n      this.setState({\n        by: user,\n        user: this.props.user\n      });\n    }\n  }\n\n  render() {\n    const {\n      rating,\n      txt,\n      user,\n      guide\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"section\", {\n      className: \"reviewAdd\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }\n    }, \"Rate: \"), /*#__PURE__*/React.createElement(Rating, {\n      start: 0,\n      stop: 5,\n      initialRating: rating,\n      emptySymbol: /*#__PURE__*/React.createElement(\"img\", {\n        src: star,\n        width: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 34\n        }\n      }),\n      fullSymbol: /*#__PURE__*/React.createElement(\"img\", {\n        src: star_o,\n        width: \"30\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 33\n        }\n      }),\n      onChange: rate => {\n        this.setState(prevState => ({\n          rating: rate\n        }));\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"form\", {\n      onSubmit: this.onSend,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"textarea\", {\n      name: \"txt\",\n      value: txt,\n      onChange: this.handledChange,\n      cols: \"30\",\n      rows: \"10\",\n      placeholder: \"What do you think about me?\",\n      required: true,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }\n    }, \"Send\")));\n  }\n\n} // const mapStateToProps = state => {\n//     return {\n//     };\n//   };\n//   const mapDispatchToProps = {\n//   };\n\n\nexport const ReviewAdd = connect()(_ReviewAdd);","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/src/cmps/ReviewAdd.jsx"],"names":["React","Component","connect","Rating","_ReviewAdd","state","rating","txt","by","handledChange","ev","name","value","target","setState","onSend","preventDefault","review","componentDidMount","user","props","guide","render","star","star_o","rate","prevState","ReviewAdd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport Rating from 'react-rating'\r\n\r\n//Images\r\nimport star from '../img/star.svg'\r\nimport star_o from '../img/‏‏star-o.svg'\r\n\r\n\r\nclass _ReviewAdd extends Component {\r\n    state = {\r\n        rating: 1,\r\n        txt: '',\r\n        by: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        const { user } = this.props\r\n        if (this.props.guide) {\r\n            this.setState({ by: user, guide: this.props.guide })\r\n        } else if (this.props.user) {\r\n            this.setState({ by: user, user: this.props.user })\r\n        }\r\n\r\n    }\r\n\r\n    handledChange = (ev) => {\r\n        const { name, value } = ev.target;\r\n        this.setState({ [name]: value })\r\n    }\r\n\r\n    onSend = (ev) => {\r\n        ev.preventDefault()\r\n        const review = this.state\r\n    }\r\n\r\n    render() {\r\n        const { rating, txt, user, guide } = this.state\r\n        return (\r\n            <section className=\"reviewAdd\">\r\n                <p>Rate: </p>\r\n                <Rating start={0}\r\n                    stop={5}\r\n                    initialRating={rating}\r\n                    emptySymbol={<img src={star} width=\"30\" />}\r\n                    fullSymbol={<img src={star_o} width=\"30\" />}\r\n                    onChange={(rate) => {\r\n                        this.setState(prevState => ({ rating: rate }))\r\n                    }}\r\n                />\r\n                <form onSubmit={this.onSend}>\r\n                    <textarea name=\"txt\" value={txt} onChange={this.handledChange}\r\n                        cols=\"30\" rows=\"10\" placeholder=\"What do you think about me?\" required>\r\n                    </textarea>\r\n                    <button>Send</button>\r\n                </form>\r\n            </section>\r\n        )\r\n    }\r\n}\r\n\r\n// const mapStateToProps = state => {\r\n//     return {\r\n\r\n//     };\r\n//   };\r\n//   const mapDispatchToProps = {\r\n\r\n//   };\r\nexport const ReviewAdd = connect()(_ReviewAdd);\r\n"]},"metadata":{},"sourceType":"module"}