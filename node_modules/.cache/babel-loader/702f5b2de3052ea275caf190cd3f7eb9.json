{"ast":null,"code":"import trailService from '../../services/trail.service';\nexport function loadTrails() {\n  return async dispatch => {\n    try {\n      const trails = await trailService.query();\n      dispatch(setTrails(trails));\n    } catch (err) {\n      console.log('ReviewActions: err in loadTrails', err);\n    }\n  };\n}\nexport function loadTrail(id) {\n  return async dispatch => {\n    try {\n      const trail = await trailService.getById(id);\n      dispatch({\n        type: 'SET_TRAIL',\n        trail\n      });\n    } catch (err) {\n      console.log('ops', err);\n    }\n  };\n}\nexport function saveTrail(trail) {\n  return async dispatch => {\n    try {\n      const currTrail = await trailService.add(trail);\n      dispatch({\n        type: 'ADD',\n        trail: { ...currTrail\n        }\n      });\n    } catch (err) {\n      console.log('error', err);\n    }\n  };\n}\nexport function editTrail(trail) {\n  return async dispatch => {\n    try {\n      const currTrail = await trailService.edit(trail);\n      dispatch({\n        type: 'EDIT',\n        trail: {\n          currTrail\n        }\n      });\n    } catch (err) {\n      console.log('error', err);\n    }\n  };\n}\nexport function removeTrail(trailId) {\n  return async dispatch => {\n    await trailService.remove(trailId);\n    dispatch(_removeTrail(trailId));\n  };\n}\n\nfunction setTrails(trails) {\n  return {\n    type: 'SET_TRAILS',\n    trails\n  };\n}\n\nfunction _removeTrail(trailId) {\n  return {\n    type: 'DELETE',\n    trailId\n  };\n}","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/frontend/src/store/actions/trailsActions.js"],"names":["trailService","loadTrails","dispatch","trails","query","setTrails","err","console","log","loadTrail","id","trail","getById","type","saveTrail","currTrail","add","editTrail","edit","removeTrail","trailId","remove","_removeTrail"],"mappings":"AAAA,OAAOA,YAAP,MAAyB,8BAAzB;AAEA,OAAO,SAASC,UAAT,GAAsB;AAC3B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMC,MAAM,GAAG,MAAMH,YAAY,CAACI,KAAb,EAArB;AACAF,MAAAA,QAAQ,CAACG,SAAS,CAACF,MAAD,CAAV,CAAR;AACD,KAHD,CAGE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,kCAAZ,EAAgDF,GAAhD;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASG,SAAT,CAAmBC,EAAnB,EAAuB;AAC5B,SAAO,MAAMR,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMS,KAAK,GAAG,MAAMX,YAAY,CAACY,OAAb,CAAqBF,EAArB,CAApB;AACAR,MAAAA,QAAQ,CAAC;AAAEW,QAAAA,IAAI,EAAE,WAAR;AAAqBF,QAAAA;AAArB,OAAD,CAAR;AACD,KAHD,CAGE,OAAOL,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBF,GAAnB;AACD;AACF,GAPD;AAQD;AAGD,OAAO,SAASQ,SAAT,CAAmBH,KAAnB,EAA0B;AAC/B,SAAO,MAAMT,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMa,SAAS,GAAG,MAAMf,YAAY,CAACgB,GAAb,CAAiBL,KAAjB,CAAxB;AACAT,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,KADC;AAEPF,QAAAA,KAAK,EAAE,EACL,GAAGI;AADE;AAFA,OAAD,CAAR;AAMD,KARD,CAQE,OAAOT,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,GAZD;AAaD;AAGD,OAAO,SAASW,SAAT,CAAmBN,KAAnB,EAA0B;AAC/B,SAAO,MAAMT,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMa,SAAS,GAAG,MAAMf,YAAY,CAACkB,IAAb,CAAkBP,KAAlB,CAAxB;AACAT,MAAAA,QAAQ,CAAC;AACPW,QAAAA,IAAI,EAAE,MADC;AAEPF,QAAAA,KAAK,EAAE;AACLI,UAAAA;AADK;AAFA,OAAD,CAAR;AAMD,KARD,CAQE,OAAOT,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,GAArB;AACD;AACF,GAZD;AAaD;AAGD,OAAO,SAASa,WAAT,CAAqBC,OAArB,EAA8B;AACnC,SAAO,MAAMlB,QAAN,IAAkB;AACvB,UAAMF,YAAY,CAACqB,MAAb,CAAoBD,OAApB,CAAN;AACAlB,IAAAA,QAAQ,CAACoB,YAAY,CAACF,OAAD,CAAb,CAAR;AACD,GAHD;AAID;;AAGD,SAASf,SAAT,CAAmBF,MAAnB,EAA2B;AACzB,SAAO;AACLU,IAAAA,IAAI,EAAE,YADD;AAELV,IAAAA;AAFK,GAAP;AAID;;AAGD,SAASmB,YAAT,CAAsBF,OAAtB,EAA+B;AAC7B,SAAO;AACLP,IAAAA,IAAI,EAAE,QADD;AAELO,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import trailService from '../../services/trail.service';\r\n\r\nexport function loadTrails() {\r\n  return async dispatch => {\r\n    try {\r\n      const trails = await trailService.query();\r\n      dispatch(setTrails(trails));\r\n    } catch (err) {\r\n      console.log('ReviewActions: err in loadTrails', err);\r\n    }\r\n  };\r\n}\r\n\r\nexport function loadTrail(id) {\r\n  return async dispatch => {\r\n    try {\r\n      const trail = await trailService.getById(id);\r\n      dispatch({ type: 'SET_TRAIL', trail });\r\n    } catch (err) {\r\n      console.log('ops', err);\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport function saveTrail(trail) {\r\n  return async dispatch => {\r\n    try {\r\n      const currTrail = await trailService.add(trail);\r\n      dispatch({\r\n        type: 'ADD',\r\n        trail: {\r\n          ...currTrail,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.log('error', err);\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport function editTrail(trail) {\r\n  return async dispatch => {\r\n    try {\r\n      const currTrail = await trailService.edit(trail);\r\n      dispatch({\r\n        type: 'EDIT',\r\n        trail: {\r\n          currTrail,\r\n        },\r\n      });\r\n    } catch (err) {\r\n      console.log('error', err);\r\n    }\r\n  };\r\n}\r\n\r\n\r\nexport function removeTrail(trailId) {\r\n  return async dispatch => {\r\n    await trailService.remove(trailId);\r\n    dispatch(_removeTrail(trailId));\r\n  };\r\n}\r\n\r\n\r\nfunction setTrails(trails) {\r\n  return {\r\n    type: 'SET_TRAILS',\r\n    trails,\r\n  };\r\n}\r\n\r\n\r\nfunction _removeTrail(trailId) {\r\n  return {\r\n    type: 'DELETE',\r\n    trailId,\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}