{"ast":null,"code":"import HttpService from './http.service';\nexport default {\n  query,\n  getById,\n  remove,\n  add,\n  edit\n};\n\nfunction query() {\n  return HttpService.get('trails');\n}\n\nfunction getById(trailId) {\n  return HttpService.get(`trails/${trailId}`);\n}\n\nfunction remove(id) {\n  return HttpService.delete(`trails/${id}`);\n}\n\nasync function add(trail) {\n  trail._id = makeId();\n  const addedTrail = await HttpService.post('trails', trail);\n  return addedTrail;\n}\n\nasync function edit(trail) {\n  trail.isEditMode = false;\n  const trailToEdit = await HttpService.put(`trails/${trail._id}`, trail);\n  return trailToEdit;\n}\n\nfunction makeId(length = 3) {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/frontend/src/services/trail.service.js"],"names":["HttpService","query","getById","remove","add","edit","get","trailId","id","delete","trail","_id","makeId","addedTrail","post","isEditMode","trailToEdit","put","length","text","possible","i","charAt","Math","floor","random"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,gBAAxB;AAEA,eAAe;AACbC,EAAAA,KADa;AAEbC,EAAAA,OAFa;AAGbC,EAAAA,MAHa;AAIbC,EAAAA,GAJa;AAKbC,EAAAA;AALa,CAAf;;AAQA,SAASJ,KAAT,GAAiB;AACf,SAAOD,WAAW,CAACM,GAAZ,CAAgB,QAAhB,CAAP;AACD;;AAED,SAASJ,OAAT,CAAiBK,OAAjB,EAA0B;AACxB,SAAOP,WAAW,CAACM,GAAZ,CAAiB,UAASC,OAAQ,EAAlC,CAAP;AACD;;AAED,SAASJ,MAAT,CAAgBK,EAAhB,EAAoB;AAClB,SAAOR,WAAW,CAACS,MAAZ,CAAoB,UAASD,EAAG,EAAhC,CAAP;AACD;;AAED,eAAeJ,GAAf,CAAmBM,KAAnB,EAA0B;AACxBA,EAAAA,KAAK,CAACC,GAAN,GAAYC,MAAM,EAAlB;AACA,QAAMC,UAAU,GAAG,MAAMb,WAAW,CAACc,IAAZ,CAAiB,QAAjB,EAA2BJ,KAA3B,CAAzB;AACA,SAAOG,UAAP;AACD;;AAED,eAAeR,IAAf,CAAoBK,KAApB,EAA2B;AAC1BA,EAAAA,KAAK,CAACK,UAAN,GAAkB,KAAlB;AACC,QAAMC,WAAW,GAAG,MAAMhB,WAAW,CAACiB,GAAZ,CAAiB,UAASP,KAAK,CAACC,GAAI,EAApC,EAAuCD,KAAvC,CAA1B;AACA,SAAOM,WAAP;AACD;;AAED,SAASJ,MAAT,CAAgBM,MAAM,GAAG,CAAzB,EAA4B;AAC1B,MAAIC,IAAI,GAAG,EAAX;AACA,QAAMC,QAAQ,GAAG,gEAAjB;;AAEA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,MAApB,EAA4BG,CAAC,EAA7B,EAAiC;AAC/BF,IAAAA,IAAI,IAAIC,QAAQ,CAACE,MAAT,CAAgBC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBL,QAAQ,CAACF,MAApC,CAAhB,CAAR;AACD;;AAED,SAAOC,IAAP;AACD","sourcesContent":["import HttpService from './http.service';\n\nexport default {\n  query,\n  getById,\n  remove,\n  add,\n  edit\n};\n\nfunction query() {\n  return HttpService.get('trails');\n}\n\nfunction getById(trailId) {\n  return HttpService.get(`trails/${trailId}`);\n}\n\nfunction remove(id) {\n  return HttpService.delete(`trails/${id}`);\n}\n\nasync function add(trail) {\n  trail._id = makeId();\n  const addedTrail = await HttpService.post('trails', trail);\n  return addedTrail;\n}\n\nasync function edit(trail) {\n trail.isEditMode =false\n  const trailToEdit = await HttpService.put(`trails/${trail._id}`, trail)\n  return trailToEdit\n}\n\nfunction makeId(length = 3) {\n  let text = '';\n  const possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n  for (let i = 0; i < length; i++) {\n    text += possible.charAt(Math.floor(Math.random() * possible.length));\n  }\n\n  return text;\n}"]},"metadata":{},"sourceType":"module"}