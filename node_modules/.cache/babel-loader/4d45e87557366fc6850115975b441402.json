{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lior9\\\\Desktop\\\\sprint4\\\\Hike_N_Guide\\\\frontend\\\\src\\\\pages\\\\TrailPage.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\nimport TrailsFilter from '../cmps/TrailsFilter';\nimport { List } from '../cmps/List';\nimport { loadTrails } from '../store/actions/trailsActions';\n\nclass _TrailPage extends Component {\n  componentDidMount() {\n    this.props.loadTrails();\n  }\n\n  render() {\n    const {\n      trails\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"main\", {\n      className: \"trail-page\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, this.props.trails && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 39\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 21\n      }\n    }, \"Choose your trail\"), \"  \", /*#__PURE__*/React.createElement(Link, {\n      to: \"trail/add\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 49\n      }\n    }, \"Add Trail\"), /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      items: trails,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }\n    })));\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  trails: state.trail.trails\n});\n\nconst mapDispatchToProps = {\n  loadTrails\n};\nexport const TrailPage = connect(mapStateToProps, mapDispatchToProps)(_TrailPage);","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/frontend/src/pages/TrailPage.jsx"],"names":["React","Component","connect","Link","TrailsFilter","List","loadTrails","_TrailPage","componentDidMount","props","render","trails","mapStateToProps","state","trail","mapDispatchToProps","TrailPage"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,YAAP,MAAyB,sBAAzB;AACA,SAASC,IAAT,QAAqB,cAArB;AAGA,SAASC,UAAT,QAA2B,gCAA3B;;AAGA,MAAMC,UAAN,SAAyBN,SAAzB,CAAmC;AACjCO,EAAAA,iBAAiB,GAAG;AAClB,SAAKC,KAAL,CAAWH,UAAX;AACD;;AAEDI,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAa,KAAKF,KAAxB;AACA,wBAEQ;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKA,KAAL,CAAWE,MAAX,iBAAqB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAClB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADkB,qBACU,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAC,WAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBADV,eAGlB,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHkB,eAWlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAXkB,eA0BlB,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAGA,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA1BkB,CAD1B,CAFR;AAkCD;;AAzCgC;;AA4CnC,MAAMC,eAAe,GAAGC,KAAK,KAAK;AAChCF,EAAAA,MAAM,EAAEE,KAAK,CAACC,KAAN,CAAYH;AADY,CAAL,CAA7B;;AAGA,MAAMI,kBAAkB,GAAG;AACzBT,EAAAA;AADyB,CAA3B;AAGA,OAAO,MAAMU,SAAS,GAAGd,OAAO,CAACU,eAAD,EAAkBG,kBAAlB,CAAP,CAA6CR,UAA7C,CAAlB","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport TrailsFilter from '../cmps/TrailsFilter';\r\nimport { List } from '../cmps/List';\r\n\r\n\r\nimport { loadTrails } from '../store/actions/trailsActions';\r\n\r\n\r\nclass _TrailPage extends Component {\r\n  componentDidMount() {\r\n    this.props.loadTrails();\r\n  }\r\n\r\n  render() {\r\n    const { trails } = this.props;\r\n    return (\r\n\r\n            <main className=\"trail-page\">\r\n                {this.props.trails && <React.Fragment>\r\n                    <h2>Choose your trail</h2>  <Link to=\"trail/add\">Add Trail</Link>\r\n\r\n                    <React.Fragment>\r\n                        {/* < TrailAdd /> */}\r\n\r\n                    </React.Fragment>\r\n\r\n\r\n                    {/* country filter section starts here */}\r\n\r\n                    <section>\r\n                        {/* <input name=\"country\"  type=\"text\" placeholder=\"search trails in country\" /> */}\r\n                    </section>\r\n\r\n                    {/* country filter section ends here */}\r\n\r\n\r\n                    {/* side-filter starts here */}\r\n                    {/* <TrailsFilter /> */}\r\n                    {/* side-filter ends here */}\r\n\r\n\r\n                    {/* previews */}\r\n\r\n                    {/* uncomment when previews are ready */}\r\n                    <List items={ trails } />\r\n\r\n                </React.Fragment>}\r\n            </main>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => ({\r\n  trails: state.trail.trails,\r\n});\r\nconst mapDispatchToProps = {\r\n  loadTrails,\r\n};\r\nexport const TrailPage = connect(mapStateToProps, mapDispatchToProps)(_TrailPage);\r\n"]},"metadata":{},"sourceType":"module"}