{"ast":null,"code":"import UserService from '../../services/user.service'; // import { loading, doneLoading } from './SystemActions';\n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      // dispatch(loading());\n      const users = await UserService.query();\n      dispatch(_setUsers(users));\n    } catch (err) {\n      console.log('UserActions: err in loadUsers', err);\n    } finally {// dispatch(doneLoading());\n    }\n  };\n}\nexport function removeUser(userId) {\n  return async dispatch => {\n    try {\n      await UserService.remove(userId);\n      dispatch(_removeUser(userId));\n    } catch (err) {\n      console.log('UserActions: err in removeUser', err);\n    }\n  };\n}\nexport function addUser(user) {\n  return async dispatch => {\n    try {\n      const addedUser = await UserService.save(user);\n      dispatch(_addUser(addedUser));\n    } catch (err) {\n      console.log('UserActions: err in addUser', err);\n    }\n  };\n}\nexport function updateUser(user) {\n  return async dispatch => {\n    try {\n      await UserService.save(user);\n      dispatch(_updateUser(user));\n    } catch (err) {\n      console.log('UserActions: err in updateUser', err);\n    }\n  };\n}\nexport function setUser(user) {\n  return {\n    type: 'SET_USER',\n    user\n  };\n} // export function login(userCreds) {\n//     return async dispatch => {\n//         const user = await UserService.login(userCreds);\n//         dispatch(setUser(user));\n//     };\n// }\n// export function signup(userCreds) {\n//     return async dispatch => {\n//         const user = await UserService.signup(userCreds);\n//         dispatch(setUser(user));\n//     };\n// }\n// export function logout() {\n//     return async dispatch => {\n//         await UserService.logout();\n//         dispatch(setUser(null));\n//     };\n// }\n\nfunction _setUsers(users) {\n  return {\n    type: 'SET_USERS',\n    users\n  };\n}\n\nfunction _removeUser(userId) {\n  return {\n    type: 'USER_REMOVE',\n    userId\n  };\n}\n\nfunction _addUser(user) {\n  return {\n    type: 'USER_ADD',\n    user\n  };\n}\n\nfunction _updateUser(user) {\n  return {\n    type: 'SAVE_USER',\n    user\n  };\n}","map":{"version":3,"sources":["C:/Users/lior9/Desktop/sprint4/Hike_N_Guide/src/store/actions/userAction.js"],"names":["UserService","loadUsers","dispatch","users","query","_setUsers","err","console","log","removeUser","userId","remove","_removeUser","addUser","user","addedUser","save","_addUser","updateUser","_updateUser","setUser","type"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,6BAAxB,C,CACA;;AAEA,OAAO,SAASC,SAAT,GAAqB;AAC1B,SAAO,MAAMC,QAAN,IAAkB;AACvB,QAAI;AACF;AACA,YAAMC,KAAK,GAAG,MAAMH,WAAW,CAACI,KAAZ,EAApB;AACAF,MAAAA,QAAQ,CAACG,SAAS,CAACF,KAAD,CAAV,CAAR;AACD,KAJD,CAIE,OAAOG,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,+BAAZ,EAA6CF,GAA7C;AACD,KAND,SAMU,CACR;AACD;AACF,GAVD;AAWD;AAED,OAAO,SAASG,UAAT,CAAoBC,MAApB,EAA4B;AACjC,SAAO,MAAMR,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMF,WAAW,CAACW,MAAZ,CAAmBD,MAAnB,CAAN;AACAR,MAAAA,QAAQ,CAACU,WAAW,CAACF,MAAD,CAAZ,CAAR;AACD,KAHD,CAGE,OAAOJ,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,GAA9C;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASO,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,SAAO,MAAMZ,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMa,SAAS,GAAG,MAAMf,WAAW,CAACgB,IAAZ,CAAiBF,IAAjB,CAAxB;AACAZ,MAAAA,QAAQ,CAACe,QAAQ,CAACF,SAAD,CAAT,CAAR;AACD,KAHD,CAGE,OAAOT,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,6BAAZ,EAA2CF,GAA3C;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASY,UAAT,CAAoBJ,IAApB,EAA0B;AAC/B,SAAO,MAAMZ,QAAN,IAAkB;AACvB,QAAI;AACF,YAAMF,WAAW,CAACgB,IAAZ,CAAiBF,IAAjB,CAAN;AACAZ,MAAAA,QAAQ,CAACiB,WAAW,CAACL,IAAD,CAAZ,CAAR;AACD,KAHD,CAGE,OAAOR,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,gCAAZ,EAA8CF,GAA9C;AACD;AACF,GAPD;AAQD;AAED,OAAO,SAASc,OAAT,CAAiBN,IAAjB,EAAuB;AAC5B,SAAO;AACLO,IAAAA,IAAI,EAAE,UADD;AAELP,IAAAA;AAFK,GAAP;AAID,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAST,SAAT,CAAmBF,KAAnB,EAA0B;AACxB,SAAO;AACLkB,IAAAA,IAAI,EAAE,WADD;AAELlB,IAAAA;AAFK,GAAP;AAID;;AAED,SAASS,WAAT,CAAqBF,MAArB,EAA6B;AAC3B,SAAO;AACLW,IAAAA,IAAI,EAAE,aADD;AAELX,IAAAA;AAFK,GAAP;AAID;;AAED,SAASO,QAAT,CAAkBH,IAAlB,EAAwB;AACtB,SAAO;AACLO,IAAAA,IAAI,EAAE,UADD;AAELP,IAAAA;AAFK,GAAP;AAID;;AAED,SAASK,WAAT,CAAqBL,IAArB,EAA2B;AACzB,SAAO;AACLO,IAAAA,IAAI,EAAE,WADD;AAELP,IAAAA;AAFK,GAAP;AAID","sourcesContent":["import UserService from '../../services/user.service';\n// import { loading, doneLoading } from './SystemActions';\n\nexport function loadUsers() {\n  return async dispatch => {\n    try {\n      // dispatch(loading());\n      const users = await UserService.query();\n      dispatch(_setUsers(users));\n    } catch (err) {\n      console.log('UserActions: err in loadUsers', err);\n    } finally {\n      // dispatch(doneLoading());\n    }\n  };\n}\n\nexport function removeUser(userId) {\n  return async dispatch => {\n    try {\n      await UserService.remove(userId);\n      dispatch(_removeUser(userId));\n    } catch (err) {\n      console.log('UserActions: err in removeUser', err);\n    }\n  };\n}\n\nexport function addUser(user) {\n  return async dispatch => {\n    try {\n      const addedUser = await UserService.save(user);\n      dispatch(_addUser(addedUser));\n    } catch (err) {\n      console.log('UserActions: err in addUser', err);\n    }\n  };\n}\n\nexport function updateUser(user) {\n  return async dispatch => {\n    try {\n      await UserService.save(user);\n      dispatch(_updateUser(user));\n    } catch (err) {\n      console.log('UserActions: err in updateUser', err);\n    }\n  };\n}\n\nexport function setUser(user) {\n  return {\n    type: 'SET_USER',\n    user,\n  };\n}\n\n// export function login(userCreds) {\n//     return async dispatch => {\n//         const user = await UserService.login(userCreds);\n//         dispatch(setUser(user));\n//     };\n// }\n// export function signup(userCreds) {\n//     return async dispatch => {\n//         const user = await UserService.signup(userCreds);\n//         dispatch(setUser(user));\n//     };\n// }\n// export function logout() {\n//     return async dispatch => {\n//         await UserService.logout();\n//         dispatch(setUser(null));\n//     };\n// }\n\nfunction _setUsers(users) {\n  return {\n    type: 'SET_USERS',\n    users,\n  };\n}\n\nfunction _removeUser(userId) {\n  return {\n    type: 'USER_REMOVE',\n    userId,\n  };\n}\n\nfunction _addUser(user) {\n  return {\n    type: 'USER_ADD',\n    user,\n  };\n}\n\nfunction _updateUser(user) {\n  return {\n    type: 'SAVE_USER',\n    user,\n  };\n}\n"]},"metadata":{},"sourceType":"module"}